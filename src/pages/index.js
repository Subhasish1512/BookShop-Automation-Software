import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import Link from "next/link";
import { useState } from "react";
import axios from "axios";
import { useRouter } from "next/router";
import Addbooksale from "../components/Addbooksale";
const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [searchData, setSearchData] = useState({
    params: "",
    query: "",
  });
  const [booklist, setBooklist] = useState([])
  const [bookbought, setBookbought] = useState([])
  const[formData,setFormData] = useState({
    id:"",
    password: "",
    role: ""
  });
  const {push} = useRouter();
  const addbook = (quan, ISBN) => {
    // console.log("book added", quan, ISBN)
    if(bookbought[ISBN]){
      setBookbought({...bookbought,  [ISBN]: bookbought[ISBN]+Number(quan)});
    } else {
        setBookbought({...bookbought,  [ISBN] : Number(quan)});
    }
    console.log(bookbought);
  }
  const deletebook = (ISBN) => {
    const {[ISBN]: removedObject, ...restbookset } = bookbought
    console.log(restbookset);
    setBookbought(restbookset);
  }
  const getresults = async(e) => {
    if(e){
      e.preventDefault();
    
    }
    const response = await axios.get("http://localhost:5000/getbook", {
        headers: {
          "params": searchData.params,
          "query": searchData.query,
        }
      }) 
    // console.log(response.data);
    setBooklist(response.data)
    if(response.data.length==0){
      alert("No Book Found");
    }
  }
const purchasebook = async()=>{
  const update = await axios.post("http://localhost:5000/salebook", {"bookorders": bookbought, "totalBill": 500});
  if(update.status==200){
    console.log(update.data);
  }
  setBookbought({});
  getresults();
}
  const loginuser = async(e) => {
    console.log(formData);
    const response = await axios.get("http://localhost:5000/loginuser", {
            headers: {
                "name": formData.id,
                "password": formData.password,
            }
        })
        if(response.status===200){
          console.log(response.data);
          if(response.data.user.role==formData.role){
            if(response.data.user.role == "manager"){
              push('/manager');
            }else if(response.data.user.role == "owner"){
              push('/owner');
            }else{
              push('/employee');
            }
          }else{
            alert("Role is Wrong");
          }
        }
        else{
            alert(response.data.message);
        }
  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link href="../style/Main.css" rel="stylesheet"></link>
      </Head>
      <main>
        <div className="total">
          <div className="d-flex flex-column bd-highlight mb-3">
            <nav className="navbar navbar-expand-lg navbar-light bg-success p-2 text-white bg-opacity-50">
              <div className="container-fluid">
                <Link className="navbar-brand text-light" href="/">
                  BAS
                </Link>
                <div
                  className="navbar-collapse position-absolute top-50 start-50 translate-middle"
                  id="navbarSupportedContent"
                >
                  <div className="nav-item text-light fs-3 fw-bold">
                    BookShop Automation Software
                  </div>
                </div>
                {/* <a className="navbar-brand text-light" href="/"><button type="button" class="btn btn-secondary btn-lg">Buy Books</button></a> */}
              </div>
            </nav>
            <div className="b d-flex flex-row align-items-center justify-content-evenly">
              <nav className="a p-2 bd-highlight col-4 .bg-light grow-1 ">
                <div className="input-group mb-3">
                  <select className="form-select" id="inputGroupSelect02" value={searchData.params} onChange={(e)=>{setSearchData({...searchData, params: e.target.value})}}>
                    <option selected>Choose...</option>
                    <option value="author">Author Name</option>
                    <option value="name">Book Name</option>
                    <option value="ISBN">ISBN Number</option>
                  </select>
                </div>
                <div className="p-2 bd-highlight">
                  <form className="d-flex flex-column">
                    <input
                      className="form-control me-2"
                      type="search"
                      placeholder="Search Book"
                      aria-label="Search"
                      value={searchData.query}
                      onChange={(e)=>{setSearchData({...searchData, query:e.target.value})}}
                    />
                    <button class="btn btn-outline-danger" onClick={getresults}>
                      Search
                    </button>
                  </form>
                </div>
                <div>
                  {booklist.map(book=>{                    
                    return(
                      <>
                        <Addbooksale
                          book = {book}
                          additem = {addbook}
                        />
                      </>
                    )
                  })}
                </div>
                <div>
                  {Object.keys(bookbought).map(bookkey=>{
                    return(
                      <>
                        <button onClick={()=>{deletebook(bookkey)}}>x</button>
                        <div>{bookkey}</div>
                        <div>{bookbought[bookkey]}</div>
                      </>
                    )
                  })}
                </div>
                <div className="d-flex flex-row align-items-center justify-content-evenly ">
                  <div>
                    <button onClick={purchasebook}>Purchase</button>
                  </div>
                  <div>
                    <Link href='/req'>
                      <button >Add Request Field</button>
                    </Link>
                  </div>
                </div>
              </nav>
              <nav>
                <div class="card text-Left">
                  <div class="card-header">LOG-IN</div>
                  <div class="card-body">
                    <div class="mb-3">
                      <label for="exampleFormControlInput1" class="form-label">
                        User ID
                      </label>
                      <input
                      onChange={(e)=>{setFormData({...formData,id: e.target.value})}}
                        type="email"
                        class="form-control"
                        id="exampleFormControlInput1"
                        placeholder="A000"
                      />
                    </div>
                    <div class="mb-3">
                      <label for="exampleFormControlInput1" class="form-label">
                        Password
                      </label>
                      <input
                      onChange={(e)=>{setFormData({...formData,password: e.target.value})}}
                        type="password"
                        id="inputPassword6"
                        class="form-control"
                        aria-describedby="passwordHelpInline"
                      />
                      <div id="passwordHelpBlock" class="form-text">
                        Your password must be 8-20 characters long.
                      </div>
                    </div>
                    <div className="input-group mb-3">
                        <select className="form-select" id="inputGroupSelect02" onChange={(e)=>{setFormData({...formData,role: e.target.value})}}>
                            <option selected>Choose...</option>
                            <option value="owner">Owner</option>
                            <option value="manager">Manager</option>
                            <option value="employee">Employee</option>
                        </select>
                    </div>
                    <div className="d-flex flex-row align-items-center justify-content-evenly " >
                        <button onClick={loginuser} class="btn btn-primary ">Log-in</button>
                    </div>
                  </div>
                </div>
              </nav>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
